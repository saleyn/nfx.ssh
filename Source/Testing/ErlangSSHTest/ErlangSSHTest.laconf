//format=laconic

// For testing this config start an Erlang shell like this:
//     werl -sname r@localhost -setcookie hahaha

nfx
{
    starters 
    {
        starter{ name="Erlang" type="NFX.Erlang.ErlApp" }
    }

    erlang
    {
        cookie="hahaha"

        node="b" 
        {
            is-local = true
            accept   = false
            address  = "localhost" // address="127.0.0.1:1234"

			trace    = "handshake"
        }

        node="r@nova"			//here is node with SSH server
        {
			connect-on-startup       = false	// Don't connect to this node automatically on startup

            //here you can use following params: 
            // transport-type (fully qualified class name of transport i.e. "NFX.Erlang.ErlSshTransport, NFX.SSH")
            // connect-timeout (in ms)
            // ssh-server-port
            // ssh-user-name
            // ssh-private-key-file (full path to SSH2 private key file)
            // ssh-authentication-type (Password or PublicKey)

            transport-type           = "NFX.Erlang.ErlSshTransport, NFX.SSH"	//inject SSH transport calss
            ssh-user-name            = "$(~USERNAME)" //enter here your user account to connect to SSH server
            //ssh-private-key-file     = "c:\\Users\\serge\\.ssh\\id_rsa"
            //ssh-authentication-type  = "PublicKey" // "Password"

            tcp-no-delay             = true
            tcp-rcv-buf-size         = 100000
            tcp-snd-buf-size         = 100000
        }
    }
}
